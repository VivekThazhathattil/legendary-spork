#include <stdio.h>
#include <stdlib.h>

#define MODULO_NUM 1000000007

typedef long long int ll;

char *get_binary_representation(ll num, ll num_days){
    int arr[64], curr_bit, len = 0;
    while(num != 0){
        arr[len] = num&1;
        num >>= 1;
        ++len;
    }
    char *str = (char *) malloc(sizeof(char) * (len*num_days + 1));
    for(int j = 0; j < len*num_days; ++j)
        str[j] = '0' + arr[j % len];
    str[len*num_days] = '\0';
    return str;
}

int get_len(char *str){
   int len = 0; 
   while(str[len] != '\0')
       ++len;
   return len;
}

ll get_two_power(int pos){
    ll num = 1;
    while(pos--)
        num = (num * 2) % MODULO_NUM;
    return num;
}

ll bin_to_dec(int pos, char c){
    if(c == '0')
        return 0;
    return get_two_power(pos);
}

int main(void){
    int t;
    scanf("%d", &t);
    while(t--){
        ll n, k;
        ll result = 0;
        scanf("%lld %lld", &n, &k);
        char *s = get_binary_representation(n, k);
        int len = get_len(s);
        for(int i = len - 1; i >= 0; --i)
            result = (result + bin_to_dec(len - i, s[i])) % MODULO_NUM;
        printf("%lld\n", result);
        free(s);
    }
    return 0;
}
